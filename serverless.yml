service: cursos-api
frameworkVersion: '2'
provider:
   name: aws
   runtime: nodejs14.x
   stage: dev
   region: us-east-1
   apiGateway:
      shouldStartNameWithService: true
   environment: ${file(env.${self:custom.stage}.json)}
   lambdaHashingVersion: 20201221
   timeout: 30
   versionFunctions: false

custom:
   stage: ${opt:stage,self:provider.stage}
   region: ${opt:region,self:provider.region}

package:
   individually: true
   patterns:
      - '!.serverless/**'
      - '!.git/**'
      - '!*.md'
      - '!env.*.json'
      - '!.idea/**'

functions:
   app:
      handler: app.handler
      name: ${self:service}-${self:custom.stage}-app
      package:
         patterns:
            - '!package-lock.json'
            - '!package.json'
            - '!node_modules/**'
      layers:
         - { Ref: ApiLambdaLayer }
      events:
         - http:
              path: /{proxy+}
              method: any
              cors:
                 origin: '*'

layers:
   Api:
      path: layers/api-layer
      name: ${self:service}-layer-${self:custom.stage}
      description: Layer para el API
      compatibleRuntimes:
         - nodejs14.x

plugins:
   - serverless-offline

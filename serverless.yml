service: ${self:custom.name}
frameworkVersion: '2'
provider:
   name: aws
   runtime: nodejs14.x
   stage: DESA
   region: us-east-2
   apiGateway:
      shouldStartNameWithService: true
   environment: ${file(env.${self:custom.fileEnvironment.${opt:stage}}.json)}
   lambdaHashingVersion: 20201221
   timeout: 30
   versionFunctions: false

custom:
   stage: ${opt:stage,self:provider.stage}
   fileEnvironment:
     DESA: dev
     PROD: prod
   region: ${opt:region,self:provider.region}
   name: API-CURSOS-UNMSM
   regions:
     code:
       DESA: us-east-2
       PROD: us-east-1
     abbrev:
       DESA: UE2
       PROD: UE1
     

package:
   individually: true
   patterns:
      - '!.serverless/**'
      - '!.git/**'
      - '!*.md'
      - '!env.*.json'
      - '!.idea/**'

functions:
   app:
      handler: app.handler
      name: ${self:custom.regions.abbrev.${opt:stage}}COM${opt:stage}CURSOS001
      package:
         patterns:
            - '!package-lock.json'
            - '!package.json'
            - '!node_modules/**'
      layers:
         - { Ref: ApiLambdaLayer }
      events:
        - http:
            path: /{proxy+}
            method: any
            cors:
              origin: '*'
              headers:
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Amz-Security-Token
            authorizer:
              type: aws_iam

layers:
   Api:
      path: layers/api-layer
      name: ${self:custom.regions.abbrev.${opt:stage}}COM${opt:stage}LYCURSOS001
      description: Layer para el API
      compatibleRuntimes:
         - nodejs14.x

plugins:
   - serverless-offline
